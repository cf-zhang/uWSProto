// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#include "Login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace com {
namespace genesis {
namespace protobuf {
class CSHandshakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSHandshake> _instance;
} _CSHandshake_default_instance_;
class SCHandshakeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SCHandshakeReply> _instance;
} _SCHandshakeReply_default_instance_;
class CSClientTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSClientType> _instance;
} _CSClientType_default_instance_;
}  // namespace protobuf
}  // namespace genesis
}  // namespace com
static void InitDefaultsCSHandshake_Login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_CSHandshake_default_instance_;
    new (ptr) ::com::genesis::protobuf::CSHandshake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::CSHandshake::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSHandshake_Login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSHandshake_Login_2eproto}, {}};

static void InitDefaultsSCHandshakeReply_Login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_SCHandshakeReply_default_instance_;
    new (ptr) ::com::genesis::protobuf::SCHandshakeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::SCHandshakeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SCHandshakeReply_Login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSCHandshakeReply_Login_2eproto}, {}};

static void InitDefaultsCSClientType_Login_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_CSClientType_default_instance_;
    new (ptr) ::com::genesis::protobuf::CSClientType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::CSClientType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CSClientType_Login_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCSClientType_Login_2eproto}, {}};

void InitDefaults_Login_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CSHandshake_Login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SCHandshakeReply_Login_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSClientType_Login_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Login_2eproto[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_Login_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Login_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Login_2eproto::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSHandshake, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSHandshake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::SCHandshakeReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::SCHandshakeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::SCHandshakeReply, indexbegin_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSClientType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSClientType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSClientType, type_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::com::genesis::protobuf::CSHandshake)},
  { 5, 11, sizeof(::com::genesis::protobuf::SCHandshakeReply)},
  { 12, 18, sizeof(::com::genesis::protobuf::CSClientType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_CSHandshake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_SCHandshakeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_CSClientType_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Login_2eproto = {
  {}, AddDescriptors_Login_2eproto, "Login.proto", schemas,
  file_default_instances, TableStruct_Login_2eproto::offsets,
  file_level_metadata_Login_2eproto, 3, file_level_enum_descriptors_Login_2eproto, file_level_service_descriptors_Login_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_Login_2eproto = {
  false, InitDefaults_Login_2eproto, 
  "\n\013Login.proto\022\024com.genesis.protobuf\032\030cli"
  "ent/MessageType.proto\"\023\n\013CSHandshake:\004\210\265"
  "\030\001\",\n\020SCHandshakeReply\022\022\n\nindexBegin\030\001 \002"
  "(\005:\004\220\265\030\001\"D\n\014CSClientType\022.\n\004type\030\001 \001(\0162 "
  ".com.genesis.protobuf.ClientType:\004\210\265\030\003**"
  "\n\nClientType\022\t\n\005Robot\020\001\022\021\n\rControlClient"
  "\020\002B\016B\014LoginMessage"
,
  "Login.proto", &assign_descriptors_table_Login_2eproto, 258,
};

void AddDescriptors_Login_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
//    ::AddDescriptors_client_2fMessageType_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Login_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Login_2eproto = []() { AddDescriptors_Login_2eproto(); return true; }();
namespace com {
namespace genesis {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* ClientType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Login_2eproto);
  return file_level_enum_descriptors_Login_2eproto[0];
}
bool ClientType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CSHandshake::InitAsDefaultInstance() {
}
class CSHandshake::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSHandshake::CSHandshake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.CSHandshake)
}
CSHandshake::CSHandshake(const CSHandshake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.CSHandshake)
}

void CSHandshake::SharedCtor() {
}

CSHandshake::~CSHandshake() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.CSHandshake)
  SharedDtor();
}

void CSHandshake::SharedDtor() {
}

void CSHandshake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSHandshake& CSHandshake::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CSHandshake_Login_2eproto.base);
  return *internal_default_instance();
}


void CSHandshake::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.CSHandshake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CSHandshake::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CSHandshake*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CSHandshake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.CSHandshake)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.CSHandshake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.CSHandshake)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CSHandshake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.CSHandshake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.CSHandshake)
}

::google::protobuf::uint8* CSHandshake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.CSHandshake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.CSHandshake)
  return target;
}

size_t CSHandshake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.CSHandshake)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSHandshake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.CSHandshake)
  GOOGLE_DCHECK_NE(&from, this);
  const CSHandshake* source =
      ::google::protobuf::DynamicCastToGenerated<CSHandshake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.CSHandshake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.CSHandshake)
    MergeFrom(*source);
  }
}

void CSHandshake::MergeFrom(const CSHandshake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.CSHandshake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CSHandshake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.CSHandshake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSHandshake::CopyFrom(const CSHandshake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.CSHandshake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSHandshake::IsInitialized() const {
  return true;
}

void CSHandshake::Swap(CSHandshake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSHandshake::InternalSwap(CSHandshake* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata CSHandshake::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Login_2eproto);
  return ::file_level_metadata_Login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SCHandshakeReply::InitAsDefaultInstance() {
}
class SCHandshakeReply::HasBitSetters {
 public:
  static void set_has_indexbegin(SCHandshakeReply* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SCHandshakeReply::kIndexBeginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SCHandshakeReply::SCHandshakeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.SCHandshakeReply)
}
SCHandshakeReply::SCHandshakeReply(const SCHandshakeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  indexbegin_ = from.indexbegin_;
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.SCHandshakeReply)
}

void SCHandshakeReply::SharedCtor() {
  indexbegin_ = 0;
}

SCHandshakeReply::~SCHandshakeReply() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.SCHandshakeReply)
  SharedDtor();
}

void SCHandshakeReply::SharedDtor() {
}

void SCHandshakeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SCHandshakeReply& SCHandshakeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SCHandshakeReply_Login_2eproto.base);
  return *internal_default_instance();
}


void SCHandshakeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.SCHandshakeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indexbegin_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SCHandshakeReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SCHandshakeReply*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // required int32 indexBegin = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_indexbegin(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SCHandshakeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.SCHandshakeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 indexBegin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_indexbegin(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexbegin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.SCHandshakeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.SCHandshakeReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SCHandshakeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.SCHandshakeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 indexBegin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->indexbegin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.SCHandshakeReply)
}

::google::protobuf::uint8* SCHandshakeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.SCHandshakeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 indexBegin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->indexbegin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.SCHandshakeReply)
  return target;
}

size_t SCHandshakeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.SCHandshakeReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 indexBegin = 1;
  if (has_indexbegin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->indexbegin());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SCHandshakeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.SCHandshakeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SCHandshakeReply* source =
      ::google::protobuf::DynamicCastToGenerated<SCHandshakeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.SCHandshakeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.SCHandshakeReply)
    MergeFrom(*source);
  }
}

void SCHandshakeReply::MergeFrom(const SCHandshakeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.SCHandshakeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_indexbegin()) {
    set_indexbegin(from.indexbegin());
  }
}

void SCHandshakeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.SCHandshakeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SCHandshakeReply::CopyFrom(const SCHandshakeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.SCHandshakeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SCHandshakeReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SCHandshakeReply::Swap(SCHandshakeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SCHandshakeReply::InternalSwap(SCHandshakeReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(indexbegin_, other->indexbegin_);
}

::google::protobuf::Metadata SCHandshakeReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Login_2eproto);
  return ::file_level_metadata_Login_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CSClientType::InitAsDefaultInstance() {
}
class CSClientType::HasBitSetters {
 public:
  static void set_has_type(CSClientType* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSClientType::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSClientType::CSClientType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.CSClientType)
}
CSClientType::CSClientType(const CSClientType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.CSClientType)
}

void CSClientType::SharedCtor() {
  type_ = 1;
}

CSClientType::~CSClientType() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.CSClientType)
  SharedDtor();
}

void CSClientType::SharedDtor() {
}

void CSClientType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSClientType& CSClientType::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CSClientType_Login_2eproto.base);
  return *internal_default_instance();
}


void CSClientType::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.CSClientType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CSClientType::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CSClientType*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional .com.genesis.protobuf.ClientType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        if (!::com::genesis::protobuf::ClientType_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        ::com::genesis::protobuf::ClientType value = static_cast<::com::genesis::protobuf::ClientType>(val);
        msg->set_type(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CSClientType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.CSClientType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.genesis.protobuf.ClientType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::genesis::protobuf::ClientType_IsValid(value)) {
            set_type(static_cast< ::com::genesis::protobuf::ClientType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.CSClientType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.CSClientType)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CSClientType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.CSClientType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.ClientType type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.CSClientType)
}

::google::protobuf::uint8* CSClientType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.CSClientType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.ClientType type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.CSClientType)
  return target;
}

size_t CSClientType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.CSClientType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.genesis.protobuf.ClientType type = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSClientType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.CSClientType)
  GOOGLE_DCHECK_NE(&from, this);
  const CSClientType* source =
      ::google::protobuf::DynamicCastToGenerated<CSClientType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.CSClientType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.CSClientType)
    MergeFrom(*source);
  }
}

void CSClientType::MergeFrom(const CSClientType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.CSClientType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    set_type(from.type());
  }
}

void CSClientType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.CSClientType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSClientType::CopyFrom(const CSClientType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.CSClientType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSClientType::IsInitialized() const {
  return true;
}

void CSClientType::Swap(CSClientType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSClientType::InternalSwap(CSClientType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(type_, other->type_);
}

::google::protobuf::Metadata CSClientType::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Login_2eproto);
  return ::file_level_metadata_Login_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace genesis
}  // namespace com
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::CSHandshake* Arena::CreateMaybeMessage< ::com::genesis::protobuf::CSHandshake >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::CSHandshake >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::SCHandshakeReply* Arena::CreateMaybeMessage< ::com::genesis::protobuf::SCHandshakeReply >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::SCHandshakeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::CSClientType* Arena::CreateMaybeMessage< ::com::genesis::protobuf::CSClientType >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::CSClientType >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
