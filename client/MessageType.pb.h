// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageType.proto

#ifndef PROTOBUF_INCLUDED_MessageType_2eproto
#define PROTOBUF_INCLUDED_MessageType_2eproto

#include <limits>
#include <string>

#include <google/protobuf/stubs/common.h>
#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_MessageType_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_MessageType_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_MessageType_2eproto();
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
namespace com {
namespace genesis {
namespace protobuf {

enum MessageTarget {
  ERROR = 1
};
bool MessageTarget_IsValid(int value);
const MessageTarget MessageTarget_MIN = ERROR;
const MessageTarget MessageTarget_MAX = ERROR;
const int MessageTarget_ARRAYSIZE = MessageTarget_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageTarget_descriptor();
inline const ::std::string& MessageTarget_Name(MessageTarget value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageTarget_descriptor(), value);
}
inline bool MessageTarget_Parse(
    const ::std::string& name, MessageTarget* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageTarget>(
    MessageTarget_descriptor(), name, value);
}
enum CSMessageType {
  CS_HANDSHAKE = 1,
  CS_TIME_SYNC = 2,
  CS_CLIENT_TYPE = 3,
  CS_ROBOT_POS = 21,
  CS_ROBOT_BATTERY = 22,
  CS_ROBOT_SWITCH = 23,
  CS_ROBOT_ERROR = 24,
  CS_ROBOT_STATUS = 25,
  CS_REQUEST_ROBOT_INFO = 31
};
bool CSMessageType_IsValid(int value);
const CSMessageType CSMessageType_MIN = CS_HANDSHAKE;
const CSMessageType CSMessageType_MAX = CS_REQUEST_ROBOT_INFO;
const int CSMessageType_ARRAYSIZE = CSMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSMessageType_descriptor();
inline const ::std::string& CSMessageType_Name(CSMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSMessageType_descriptor(), value);
}
inline bool CSMessageType_Parse(
    const ::std::string& name, CSMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSMessageType>(
    CSMessageType_descriptor(), name, value);
}
enum SCMessageType {
  SC_HANDSHAKE_REPLY = 1,
  SC_MSG_CAN_NOT_PROCESS = 2,
  SC_CLIENT_DATA_ERROR = 3,
  SC_TIME_SYNC_REPLY = 4,
  SC_ROBOT_POS = 31
};
bool SCMessageType_IsValid(int value);
const SCMessageType SCMessageType_MIN = SC_HANDSHAKE_REPLY;
const SCMessageType SCMessageType_MAX = SC_ROBOT_POS;
const int SCMessageType_ARRAYSIZE = SCMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SCMessageType_descriptor();
inline const ::std::string& SCMessageType_Name(SCMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SCMessageType_descriptor(), value);
}
inline bool SCMessageType_Parse(
    const ::std::string& name, SCMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SCMessageType>(
    SCMessageType_descriptor(), name, value);
}
enum SSMessageType {
  SS_HANDSHAKE = 1,
  SS_HANDSHAKE_REPLY = 2,
  SS_HEARTBEAT = 3,
  SS_HEARTBEAT_REPLY = 4
};
bool SSMessageType_IsValid(int value);
const SSMessageType SSMessageType_MIN = SS_HANDSHAKE;
const SSMessageType SSMessageType_MAX = SS_HEARTBEAT_REPLY;
const int SSMessageType_ARRAYSIZE = SSMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SSMessageType_descriptor();
inline const ::std::string& SSMessageType_Name(SSMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SSMessageType_descriptor(), value);
}
inline bool SSMessageType_Parse(
    const ::std::string& name, SSMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SSMessageType>(
    SSMessageType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================

static const int kCsMessageTypeFieldNumber = 50001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::com::genesis::protobuf::CSMessageType, ::com::genesis::protobuf::CSMessageType_IsValid>, 14, false >
  cs_message_type;
static const int kScMessageTypeFieldNumber = 50002;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::com::genesis::protobuf::SCMessageType, ::com::genesis::protobuf::SCMessageType_IsValid>, 14, false >
  sc_message_type;
static const int kSsMessageTypeFieldNumber = 50003;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::com::genesis::protobuf::SSMessageType, ::com::genesis::protobuf::SSMessageType_IsValid>, 14, false >
  ss_message_type;
static const int kTARGETFieldNumber = 50001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::com::genesis::protobuf::MessageTarget, ::com::genesis::protobuf::MessageTarget_IsValid>, 14, false >
  TARGET;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace genesis
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::genesis::protobuf::MessageTarget> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::genesis::protobuf::MessageTarget>() {
  return ::com::genesis::protobuf::MessageTarget_descriptor();
}
template <> struct is_proto_enum< ::com::genesis::protobuf::CSMessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::genesis::protobuf::CSMessageType>() {
  return ::com::genesis::protobuf::CSMessageType_descriptor();
}
template <> struct is_proto_enum< ::com::genesis::protobuf::SCMessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::genesis::protobuf::SCMessageType>() {
  return ::com::genesis::protobuf::SCMessageType_descriptor();
}
template <> struct is_proto_enum< ::com::genesis::protobuf::SSMessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::genesis::protobuf::SSMessageType>() {
  return ::com::genesis::protobuf::SSMessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_MessageType_2eproto
