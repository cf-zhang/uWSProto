// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Robot.proto

#include "Robot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RobotBattery_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RobotError_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RobotPos_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RobotStatusInfo_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RobotSwitch_Robot_2eproto;
namespace com {
namespace genesis {
namespace protobuf {
class CSRobotPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSRobotPos> _instance;
} _CSRobotPos_default_instance_;
class RobotPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotPos> _instance;
} _RobotPos_default_instance_;
class CSRobotBatteryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSRobotBattery> _instance;
} _CSRobotBattery_default_instance_;
class RobotBatteryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotBattery> _instance;
} _RobotBattery_default_instance_;
class CSRobotSwitchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSRobotSwitch> _instance;
} _CSRobotSwitch_default_instance_;
class RobotSwitchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotSwitch> _instance;
} _RobotSwitch_default_instance_;
class CSRobotStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSRobotStatus> _instance;
} _CSRobotStatus_default_instance_;
class RobotStatusInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotStatusInfo> _instance;
} _RobotStatusInfo_default_instance_;
class CSRobotErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CSRobotError> _instance;
} _CSRobotError_default_instance_;
class RobotErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RobotError> _instance;
} _RobotError_default_instance_;
}  // namespace protobuf
}  // namespace genesis
}  // namespace com
static void InitDefaultsCSRobotPos_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_CSRobotPos_default_instance_;
    new (ptr) ::com::genesis::protobuf::CSRobotPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::CSRobotPos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSRobotPos_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSRobotPos_Robot_2eproto}, {
      &scc_info_RobotPos_Robot_2eproto.base,}};

static void InitDefaultsRobotPos_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_RobotPos_default_instance_;
    new (ptr) ::com::genesis::protobuf::RobotPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::RobotPos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RobotPos_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRobotPos_Robot_2eproto}, {}};

static void InitDefaultsCSRobotBattery_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_CSRobotBattery_default_instance_;
    new (ptr) ::com::genesis::protobuf::CSRobotBattery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::CSRobotBattery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSRobotBattery_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSRobotBattery_Robot_2eproto}, {
      &scc_info_RobotBattery_Robot_2eproto.base,}};

static void InitDefaultsRobotBattery_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_RobotBattery_default_instance_;
    new (ptr) ::com::genesis::protobuf::RobotBattery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::RobotBattery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RobotBattery_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRobotBattery_Robot_2eproto}, {}};

static void InitDefaultsCSRobotSwitch_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_CSRobotSwitch_default_instance_;
    new (ptr) ::com::genesis::protobuf::CSRobotSwitch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::CSRobotSwitch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSRobotSwitch_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSRobotSwitch_Robot_2eproto}, {
      &scc_info_RobotSwitch_Robot_2eproto.base,}};

static void InitDefaultsRobotSwitch_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_RobotSwitch_default_instance_;
    new (ptr) ::com::genesis::protobuf::RobotSwitch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::RobotSwitch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RobotSwitch_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRobotSwitch_Robot_2eproto}, {}};

static void InitDefaultsCSRobotStatus_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_CSRobotStatus_default_instance_;
    new (ptr) ::com::genesis::protobuf::CSRobotStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::CSRobotStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSRobotStatus_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSRobotStatus_Robot_2eproto}, {
      &scc_info_RobotStatusInfo_Robot_2eproto.base,}};

static void InitDefaultsRobotStatusInfo_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_RobotStatusInfo_default_instance_;
    new (ptr) ::com::genesis::protobuf::RobotStatusInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::RobotStatusInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RobotStatusInfo_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRobotStatusInfo_Robot_2eproto}, {}};

static void InitDefaultsCSRobotError_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_CSRobotError_default_instance_;
    new (ptr) ::com::genesis::protobuf::CSRobotError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::CSRobotError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CSRobotError_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCSRobotError_Robot_2eproto}, {
      &scc_info_RobotError_Robot_2eproto.base,}};

static void InitDefaultsRobotError_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genesis::protobuf::_RobotError_default_instance_;
    new (ptr) ::com::genesis::protobuf::RobotError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genesis::protobuf::RobotError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RobotError_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRobotError_Robot_2eproto}, {}};

void InitDefaults_Robot_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CSRobotPos_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RobotPos_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSRobotBattery_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RobotBattery_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSRobotSwitch_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RobotSwitch_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSRobotStatus_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RobotStatusInfo_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CSRobotError_Robot_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RobotError_Robot_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_Robot_2eproto[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_Robot_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_Robot_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_Robot_2eproto::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotPos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotPos, info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotPos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotPos, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotPos, posx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotPos, posy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotPos, rotation_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotBattery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotBattery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotBattery, info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotBattery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotBattery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotBattery, remainingpower_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotBattery, remainingpercent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotBattery, voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotBattery, current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotBattery, ischarging_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotSwitch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotSwitch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotSwitch, info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotSwitch, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotSwitch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotSwitch, assistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotSwitch, urgent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotSwitch, power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotSwitch, collision_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotStatus, info_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotStatusInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotStatusInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotStatusInfo, status_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotError, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::CSRobotError, errors_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotError, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotError, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotError, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotError, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genesis::protobuf::RobotError, reason_),
  1,
  2,
  3,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::com::genesis::protobuf::CSRobotPos)},
  { 7, 16, sizeof(::com::genesis::protobuf::RobotPos)},
  { 20, 26, sizeof(::com::genesis::protobuf::CSRobotBattery)},
  { 27, 37, sizeof(::com::genesis::protobuf::RobotBattery)},
  { 42, 48, sizeof(::com::genesis::protobuf::CSRobotSwitch)},
  { 49, 58, sizeof(::com::genesis::protobuf::RobotSwitch)},
  { 62, 68, sizeof(::com::genesis::protobuf::CSRobotStatus)},
  { 69, 75, sizeof(::com::genesis::protobuf::RobotStatusInfo)},
  { 76, 82, sizeof(::com::genesis::protobuf::CSRobotError)},
  { 83, 92, sizeof(::com::genesis::protobuf::RobotError)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_CSRobotPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_RobotPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_CSRobotBattery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_RobotBattery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_CSRobotSwitch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_RobotSwitch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_CSRobotStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_RobotStatusInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_CSRobotError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genesis::protobuf::_RobotError_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_Robot_2eproto = {
  {}, AddDescriptors_Robot_2eproto, "Robot.proto", schemas,
  file_default_instances, TableStruct_Robot_2eproto::offsets,
  file_level_metadata_Robot_2eproto, 10, file_level_enum_descriptors_Robot_2eproto, file_level_service_descriptors_Robot_2eproto,
};

::google::protobuf::internal::DescriptorTable descriptor_table_Robot_2eproto = {
  false, InitDefaults_Robot_2eproto, 
  "\n\013Robot.proto\022\024com.genesis.protobuf\032\030cli"
  "ent/MessageType.proto\"@\n\nCSRobotPos\022,\n\004i"
  "nfo\030\001 \001(\0132\036.com.genesis.protobuf.RobotPo"
  "s:\004\210\265\030\025\"D\n\010RobotPos\022\n\n\002id\030\001 \001(\t\022\014\n\004posX\030"
  "\002 \001(\002\022\014\n\004posY\030\003 \001(\002\022\020\n\010rotation\030\004 \001(\002\"H\n"
  "\016CSRobotBattery\0220\n\004info\030\001 \001(\0132\".com.gene"
  "sis.protobuf.RobotBattery:\004\210\265\030\026\"v\n\014Robot"
  "Battery\022\026\n\016remainingPower\030\001 \001(\002\022\030\n\020remai"
  "ningPercent\030\002 \001(\002\022\017\n\007voltage\030\003 \001(\002\022\017\n\007cu"
  "rrent\030\004 \001(\002\022\022\n\nisCharging\030\005 \001(\010\"F\n\rCSRob"
  "otSwitch\022/\n\004info\030\001 \001(\0132!.com.genesis.pro"
  "tobuf.RobotSwitch:\004\210\265\030\027\"S\n\013RobotSwitch\022\022"
  "\n\nassistance\030\001 \001(\005\022\016\n\006urgent\030\002 \001(\010\022\r\n\005po"
  "wer\030\003 \001(\010\022\021\n\tcollision\030\004 \001(\005\"J\n\rCSRobotS"
  "tatus\0223\n\004info\030\001 \001(\0132%.com.genesis.protob"
  "uf.RobotStatusInfo:\004\210\265\030\031\"D\n\017RobotStatusI"
  "nfo\0221\n\006status\030\001 \001(\0162!.com.genesis.protob"
  "uf.RobotStatus\"F\n\014CSRobotError\0220\n\006errors"
  "\030\001 \003(\0132 .com.genesis.protobuf.RobotError"
  ":\004\210\265\030\030\"j\n\nRobotError\022\n\n\002id\030\001 \001(\005\022\r\n\005leve"
  "l\030\002 \001(\005\0221\n\006status\030\003 \001(\0162!.com.genesis.pr"
  "otobuf.RobotStatus\022\016\n\006reason\030\004 \001(\t*R\n\013Ro"
  "botStatus\022\013\n\007StandBy\020\000\022\r\n\tFollowing\020\001\022\t\n"
  "\005Pause\020\002\022\016\n\nNavigating\020\003\022\014\n\010Charging\020\004B\n"
  "B\010RobotMsg"
,
  "Robot.proto", &assign_descriptors_table_Robot_2eproto, 970,
};

void AddDescriptors_Robot_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_client_2fMessageType_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_Robot_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Robot_2eproto = []() { AddDescriptors_Robot_2eproto(); return true; }();
namespace com {
namespace genesis {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* RobotStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_Robot_2eproto);
  return file_level_enum_descriptors_Robot_2eproto[0];
}
bool RobotStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CSRobotPos::InitAsDefaultInstance() {
  ::com::genesis::protobuf::_CSRobotPos_default_instance_._instance.get_mutable()->info_ = const_cast< ::com::genesis::protobuf::RobotPos*>(
      ::com::genesis::protobuf::RobotPos::internal_default_instance());
}
class CSRobotPos::HasBitSetters {
 public:
  static const ::com::genesis::protobuf::RobotPos& info(const CSRobotPos* msg);
  static void set_has_info(CSRobotPos* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::genesis::protobuf::RobotPos&
CSRobotPos::HasBitSetters::info(const CSRobotPos* msg) {
  return *msg->info_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSRobotPos::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSRobotPos::CSRobotPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.CSRobotPos)
}
CSRobotPos::CSRobotPos(const CSRobotPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::com::genesis::protobuf::RobotPos(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.CSRobotPos)
}

void CSRobotPos::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CSRobotPos_Robot_2eproto.base);
  info_ = NULL;
}

CSRobotPos::~CSRobotPos() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.CSRobotPos)
  SharedDtor();
}

void CSRobotPos::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void CSRobotPos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSRobotPos& CSRobotPos::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CSRobotPos_Robot_2eproto.base);
  return *internal_default_instance();
}


void CSRobotPos::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.CSRobotPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CSRobotPos::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CSRobotPos*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional .com.genesis.protobuf.RobotPos info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        parser_till_end = ::com::genesis::protobuf::RobotPos::_InternalParse;
        object = msg->mutable_info();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CSRobotPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.CSRobotPos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.genesis.protobuf.RobotPos info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.CSRobotPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.CSRobotPos)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CSRobotPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.CSRobotPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotPos info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::info(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.CSRobotPos)
}

::google::protobuf::uint8* CSRobotPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.CSRobotPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotPos info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::info(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.CSRobotPos)
  return target;
}

size_t CSRobotPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.CSRobotPos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.genesis.protobuf.RobotPos info = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSRobotPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.CSRobotPos)
  GOOGLE_DCHECK_NE(&from, this);
  const CSRobotPos* source =
      ::google::protobuf::DynamicCastToGenerated<CSRobotPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.CSRobotPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.CSRobotPos)
    MergeFrom(*source);
  }
}

void CSRobotPos::MergeFrom(const CSRobotPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.CSRobotPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::com::genesis::protobuf::RobotPos::MergeFrom(from.info());
  }
}

void CSRobotPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.CSRobotPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSRobotPos::CopyFrom(const CSRobotPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.CSRobotPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSRobotPos::IsInitialized() const {
  return true;
}

void CSRobotPos::Swap(CSRobotPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSRobotPos::InternalSwap(CSRobotPos* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(info_, other->info_);
}

::google::protobuf::Metadata CSRobotPos::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RobotPos::InitAsDefaultInstance() {
}
class RobotPos::HasBitSetters {
 public:
  static void set_has_id(RobotPos* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_posx(RobotPos* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_posy(RobotPos* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_rotation(RobotPos* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotPos::kIdFieldNumber;
const int RobotPos::kPosXFieldNumber;
const int RobotPos::kPosYFieldNumber;
const int RobotPos::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotPos::RobotPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.RobotPos)
}
RobotPos::RobotPos(const RobotPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&posx_, &from.posx_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotation_) -
    reinterpret_cast<char*>(&posx_)) + sizeof(rotation_));
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.RobotPos)
}

void RobotPos::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RobotPos_Robot_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&posx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&posx_)) + sizeof(rotation_));
}

RobotPos::~RobotPos() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.RobotPos)
  SharedDtor();
}

void RobotPos::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotPos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RobotPos& RobotPos::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RobotPos_Robot_2eproto.base);
  return *internal_default_instance();
}


void RobotPos::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.RobotPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&posx_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rotation_) -
        reinterpret_cast<char*>(&posx_)) + sizeof(rotation_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RobotPos::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RobotPos*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("com.genesis.protobuf.RobotPos.id");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8Verify;
        ::std::string* str = msg->mutable_id();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      // optional float posX = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        float val;
        std::memcpy(&val, ptr, 4);
        ptr += 4;
        msg->set_posx(val);
        break;
      }
      // optional float posY = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        float val;
        std::memcpy(&val, ptr, 4);
        ptr += 4;
        msg->set_posy(val);
        break;
      }
      // optional float rotation = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        float val;
        std::memcpy(&val, ptr, 4);
        ptr += 4;
        msg->set_rotation(val);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RobotPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.RobotPos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.genesis.protobuf.RobotPos.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float posX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_posx(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float posY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_posy(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float rotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {
          HasBitSetters::set_has_rotation(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.RobotPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.RobotPos)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RobotPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.RobotPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.genesis.protobuf.RobotPos.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional float posX = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->posx(), output);
  }

  // optional float posY = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->posy(), output);
  }

  // optional float rotation = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rotation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.RobotPos)
}

::google::protobuf::uint8* RobotPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.RobotPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.genesis.protobuf.RobotPos.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional float posX = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->posx(), target);
  }

  // optional float posY = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->posy(), target);
  }

  // optional float rotation = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rotation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.RobotPos)
  return target;
}

size_t RobotPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.RobotPos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional float posX = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float posY = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float rotation = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.RobotPos)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotPos* source =
      ::google::protobuf::DynamicCastToGenerated<RobotPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.RobotPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.RobotPos)
    MergeFrom(*source);
  }
}

void RobotPos::MergeFrom(const RobotPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.RobotPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      posx_ = from.posx_;
    }
    if (cached_has_bits & 0x00000004u) {
      posy_ = from.posy_;
    }
    if (cached_has_bits & 0x00000008u) {
      rotation_ = from.rotation_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.RobotPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotPos::CopyFrom(const RobotPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.RobotPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPos::IsInitialized() const {
  return true;
}

void RobotPos::Swap(RobotPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotPos::InternalSwap(RobotPos* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(posx_, other->posx_);
  swap(posy_, other->posy_);
  swap(rotation_, other->rotation_);
}

::google::protobuf::Metadata RobotPos::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CSRobotBattery::InitAsDefaultInstance() {
  ::com::genesis::protobuf::_CSRobotBattery_default_instance_._instance.get_mutable()->info_ = const_cast< ::com::genesis::protobuf::RobotBattery*>(
      ::com::genesis::protobuf::RobotBattery::internal_default_instance());
}
class CSRobotBattery::HasBitSetters {
 public:
  static const ::com::genesis::protobuf::RobotBattery& info(const CSRobotBattery* msg);
  static void set_has_info(CSRobotBattery* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::genesis::protobuf::RobotBattery&
CSRobotBattery::HasBitSetters::info(const CSRobotBattery* msg) {
  return *msg->info_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSRobotBattery::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSRobotBattery::CSRobotBattery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.CSRobotBattery)
}
CSRobotBattery::CSRobotBattery(const CSRobotBattery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::com::genesis::protobuf::RobotBattery(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.CSRobotBattery)
}

void CSRobotBattery::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CSRobotBattery_Robot_2eproto.base);
  info_ = NULL;
}

CSRobotBattery::~CSRobotBattery() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.CSRobotBattery)
  SharedDtor();
}

void CSRobotBattery::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void CSRobotBattery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSRobotBattery& CSRobotBattery::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CSRobotBattery_Robot_2eproto.base);
  return *internal_default_instance();
}


void CSRobotBattery::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.CSRobotBattery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CSRobotBattery::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CSRobotBattery*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional .com.genesis.protobuf.RobotBattery info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        parser_till_end = ::com::genesis::protobuf::RobotBattery::_InternalParse;
        object = msg->mutable_info();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CSRobotBattery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.CSRobotBattery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.genesis.protobuf.RobotBattery info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.CSRobotBattery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.CSRobotBattery)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CSRobotBattery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.CSRobotBattery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotBattery info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::info(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.CSRobotBattery)
}

::google::protobuf::uint8* CSRobotBattery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.CSRobotBattery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotBattery info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::info(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.CSRobotBattery)
  return target;
}

size_t CSRobotBattery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.CSRobotBattery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.genesis.protobuf.RobotBattery info = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSRobotBattery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.CSRobotBattery)
  GOOGLE_DCHECK_NE(&from, this);
  const CSRobotBattery* source =
      ::google::protobuf::DynamicCastToGenerated<CSRobotBattery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.CSRobotBattery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.CSRobotBattery)
    MergeFrom(*source);
  }
}

void CSRobotBattery::MergeFrom(const CSRobotBattery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.CSRobotBattery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::com::genesis::protobuf::RobotBattery::MergeFrom(from.info());
  }
}

void CSRobotBattery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.CSRobotBattery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSRobotBattery::CopyFrom(const CSRobotBattery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.CSRobotBattery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSRobotBattery::IsInitialized() const {
  return true;
}

void CSRobotBattery::Swap(CSRobotBattery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSRobotBattery::InternalSwap(CSRobotBattery* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(info_, other->info_);
}

::google::protobuf::Metadata CSRobotBattery::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RobotBattery::InitAsDefaultInstance() {
}
class RobotBattery::HasBitSetters {
 public:
  static void set_has_remainingpower(RobotBattery* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_remainingpercent(RobotBattery* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_voltage(RobotBattery* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_current(RobotBattery* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_ischarging(RobotBattery* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotBattery::kRemainingPowerFieldNumber;
const int RobotBattery::kRemainingPercentFieldNumber;
const int RobotBattery::kVoltageFieldNumber;
const int RobotBattery::kCurrentFieldNumber;
const int RobotBattery::kIsChargingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotBattery::RobotBattery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.RobotBattery)
}
RobotBattery::RobotBattery(const RobotBattery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&remainingpower_, &from.remainingpower_,
    static_cast<size_t>(reinterpret_cast<char*>(&ischarging_) -
    reinterpret_cast<char*>(&remainingpower_)) + sizeof(ischarging_));
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.RobotBattery)
}

void RobotBattery::SharedCtor() {
  ::memset(&remainingpower_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ischarging_) -
      reinterpret_cast<char*>(&remainingpower_)) + sizeof(ischarging_));
}

RobotBattery::~RobotBattery() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.RobotBattery)
  SharedDtor();
}

void RobotBattery::SharedDtor() {
}

void RobotBattery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RobotBattery& RobotBattery::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RobotBattery_Robot_2eproto.base);
  return *internal_default_instance();
}


void RobotBattery::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.RobotBattery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&remainingpower_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ischarging_) -
        reinterpret_cast<char*>(&remainingpower_)) + sizeof(ischarging_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RobotBattery::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RobotBattery*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional float remainingPower = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        float val;
        std::memcpy(&val, ptr, 4);
        ptr += 4;
        msg->set_remainingpower(val);
        break;
      }
      // optional float remainingPercent = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        float val;
        std::memcpy(&val, ptr, 4);
        ptr += 4;
        msg->set_remainingpercent(val);
        break;
      }
      // optional float voltage = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 29) goto handle_unusual;
        float val;
        std::memcpy(&val, ptr, 4);
        ptr += 4;
        msg->set_voltage(val);
        break;
      }
      // optional float current = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 37) goto handle_unusual;
        float val;
        std::memcpy(&val, ptr, 4);
        ptr += 4;
        msg->set_current(val);
        break;
      }
      // optional bool isCharging = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        bool value = val;
        msg->set_ischarging(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RobotBattery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.RobotBattery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float remainingPower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {
          HasBitSetters::set_has_remainingpower(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &remainingpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float remainingPercent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {
          HasBitSetters::set_has_remainingpercent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &remainingpercent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float voltage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (29 & 0xFF)) {
          HasBitSetters::set_has_voltage(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float current = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (37 & 0xFF)) {
          HasBitSetters::set_has_current(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isCharging = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ischarging(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ischarging_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.RobotBattery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.RobotBattery)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RobotBattery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.RobotBattery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float remainingPower = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->remainingpower(), output);
  }

  // optional float remainingPercent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->remainingpercent(), output);
  }

  // optional float voltage = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->voltage(), output);
  }

  // optional float current = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->current(), output);
  }

  // optional bool isCharging = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ischarging(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.RobotBattery)
}

::google::protobuf::uint8* RobotBattery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.RobotBattery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float remainingPower = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->remainingpower(), target);
  }

  // optional float remainingPercent = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->remainingpercent(), target);
  }

  // optional float voltage = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->voltage(), target);
  }

  // optional float current = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->current(), target);
  }

  // optional bool isCharging = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ischarging(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.RobotBattery)
  return target;
}

size_t RobotBattery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.RobotBattery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional float remainingPower = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float remainingPercent = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float voltage = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional float current = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional bool isCharging = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotBattery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.RobotBattery)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotBattery* source =
      ::google::protobuf::DynamicCastToGenerated<RobotBattery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.RobotBattery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.RobotBattery)
    MergeFrom(*source);
  }
}

void RobotBattery::MergeFrom(const RobotBattery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.RobotBattery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      remainingpower_ = from.remainingpower_;
    }
    if (cached_has_bits & 0x00000002u) {
      remainingpercent_ = from.remainingpercent_;
    }
    if (cached_has_bits & 0x00000004u) {
      voltage_ = from.voltage_;
    }
    if (cached_has_bits & 0x00000008u) {
      current_ = from.current_;
    }
    if (cached_has_bits & 0x00000010u) {
      ischarging_ = from.ischarging_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotBattery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.RobotBattery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotBattery::CopyFrom(const RobotBattery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.RobotBattery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotBattery::IsInitialized() const {
  return true;
}

void RobotBattery::Swap(RobotBattery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotBattery::InternalSwap(RobotBattery* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(remainingpower_, other->remainingpower_);
  swap(remainingpercent_, other->remainingpercent_);
  swap(voltage_, other->voltage_);
  swap(current_, other->current_);
  swap(ischarging_, other->ischarging_);
}

::google::protobuf::Metadata RobotBattery::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CSRobotSwitch::InitAsDefaultInstance() {
  ::com::genesis::protobuf::_CSRobotSwitch_default_instance_._instance.get_mutable()->info_ = const_cast< ::com::genesis::protobuf::RobotSwitch*>(
      ::com::genesis::protobuf::RobotSwitch::internal_default_instance());
}
class CSRobotSwitch::HasBitSetters {
 public:
  static const ::com::genesis::protobuf::RobotSwitch& info(const CSRobotSwitch* msg);
  static void set_has_info(CSRobotSwitch* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::genesis::protobuf::RobotSwitch&
CSRobotSwitch::HasBitSetters::info(const CSRobotSwitch* msg) {
  return *msg->info_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSRobotSwitch::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSRobotSwitch::CSRobotSwitch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.CSRobotSwitch)
}
CSRobotSwitch::CSRobotSwitch(const CSRobotSwitch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::com::genesis::protobuf::RobotSwitch(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.CSRobotSwitch)
}

void CSRobotSwitch::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CSRobotSwitch_Robot_2eproto.base);
  info_ = NULL;
}

CSRobotSwitch::~CSRobotSwitch() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.CSRobotSwitch)
  SharedDtor();
}

void CSRobotSwitch::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void CSRobotSwitch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSRobotSwitch& CSRobotSwitch::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CSRobotSwitch_Robot_2eproto.base);
  return *internal_default_instance();
}


void CSRobotSwitch::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.CSRobotSwitch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CSRobotSwitch::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CSRobotSwitch*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional .com.genesis.protobuf.RobotSwitch info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        parser_till_end = ::com::genesis::protobuf::RobotSwitch::_InternalParse;
        object = msg->mutable_info();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CSRobotSwitch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.CSRobotSwitch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.genesis.protobuf.RobotSwitch info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.CSRobotSwitch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.CSRobotSwitch)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CSRobotSwitch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.CSRobotSwitch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotSwitch info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::info(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.CSRobotSwitch)
}

::google::protobuf::uint8* CSRobotSwitch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.CSRobotSwitch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotSwitch info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::info(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.CSRobotSwitch)
  return target;
}

size_t CSRobotSwitch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.CSRobotSwitch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.genesis.protobuf.RobotSwitch info = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSRobotSwitch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.CSRobotSwitch)
  GOOGLE_DCHECK_NE(&from, this);
  const CSRobotSwitch* source =
      ::google::protobuf::DynamicCastToGenerated<CSRobotSwitch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.CSRobotSwitch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.CSRobotSwitch)
    MergeFrom(*source);
  }
}

void CSRobotSwitch::MergeFrom(const CSRobotSwitch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.CSRobotSwitch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::com::genesis::protobuf::RobotSwitch::MergeFrom(from.info());
  }
}

void CSRobotSwitch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.CSRobotSwitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSRobotSwitch::CopyFrom(const CSRobotSwitch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.CSRobotSwitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSRobotSwitch::IsInitialized() const {
  return true;
}

void CSRobotSwitch::Swap(CSRobotSwitch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSRobotSwitch::InternalSwap(CSRobotSwitch* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(info_, other->info_);
}

::google::protobuf::Metadata CSRobotSwitch::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RobotSwitch::InitAsDefaultInstance() {
}
class RobotSwitch::HasBitSetters {
 public:
  static void set_has_assistance(RobotSwitch* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_urgent(RobotSwitch* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_power(RobotSwitch* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_collision(RobotSwitch* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotSwitch::kAssistanceFieldNumber;
const int RobotSwitch::kUrgentFieldNumber;
const int RobotSwitch::kPowerFieldNumber;
const int RobotSwitch::kCollisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotSwitch::RobotSwitch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.RobotSwitch)
}
RobotSwitch::RobotSwitch(const RobotSwitch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&assistance_, &from.assistance_,
    static_cast<size_t>(reinterpret_cast<char*>(&collision_) -
    reinterpret_cast<char*>(&assistance_)) + sizeof(collision_));
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.RobotSwitch)
}

void RobotSwitch::SharedCtor() {
  ::memset(&assistance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&collision_) -
      reinterpret_cast<char*>(&assistance_)) + sizeof(collision_));
}

RobotSwitch::~RobotSwitch() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.RobotSwitch)
  SharedDtor();
}

void RobotSwitch::SharedDtor() {
}

void RobotSwitch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RobotSwitch& RobotSwitch::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RobotSwitch_Robot_2eproto.base);
  return *internal_default_instance();
}


void RobotSwitch::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.RobotSwitch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&assistance_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&collision_) -
        reinterpret_cast<char*>(&assistance_)) + sizeof(collision_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RobotSwitch::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RobotSwitch*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional int32 assistance = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_assistance(value);
        break;
      }
      // optional bool urgent = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        bool value = val;
        msg->set_urgent(value);
        break;
      }
      // optional bool power = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        bool value = val;
        msg->set_power(value);
        break;
      }
      // optional int32 collision = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_collision(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RobotSwitch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.RobotSwitch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 assistance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_assistance(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &assistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool urgent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_urgent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &urgent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool power = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_power(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 collision = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_collision(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &collision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.RobotSwitch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.RobotSwitch)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RobotSwitch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.RobotSwitch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 assistance = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->assistance(), output);
  }

  // optional bool urgent = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->urgent(), output);
  }

  // optional bool power = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->power(), output);
  }

  // optional int32 collision = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->collision(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.RobotSwitch)
}

::google::protobuf::uint8* RobotSwitch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.RobotSwitch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 assistance = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->assistance(), target);
  }

  // optional bool urgent = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->urgent(), target);
  }

  // optional bool power = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->power(), target);
  }

  // optional int32 collision = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->collision(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.RobotSwitch)
  return target;
}

size_t RobotSwitch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.RobotSwitch)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 assistance = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->assistance());
    }

    // optional bool urgent = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool power = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional int32 collision = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->collision());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotSwitch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.RobotSwitch)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotSwitch* source =
      ::google::protobuf::DynamicCastToGenerated<RobotSwitch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.RobotSwitch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.RobotSwitch)
    MergeFrom(*source);
  }
}

void RobotSwitch::MergeFrom(const RobotSwitch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.RobotSwitch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      assistance_ = from.assistance_;
    }
    if (cached_has_bits & 0x00000002u) {
      urgent_ = from.urgent_;
    }
    if (cached_has_bits & 0x00000004u) {
      power_ = from.power_;
    }
    if (cached_has_bits & 0x00000008u) {
      collision_ = from.collision_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotSwitch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.RobotSwitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotSwitch::CopyFrom(const RobotSwitch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.RobotSwitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotSwitch::IsInitialized() const {
  return true;
}

void RobotSwitch::Swap(RobotSwitch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotSwitch::InternalSwap(RobotSwitch* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(assistance_, other->assistance_);
  swap(urgent_, other->urgent_);
  swap(power_, other->power_);
  swap(collision_, other->collision_);
}

::google::protobuf::Metadata RobotSwitch::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CSRobotStatus::InitAsDefaultInstance() {
  ::com::genesis::protobuf::_CSRobotStatus_default_instance_._instance.get_mutable()->info_ = const_cast< ::com::genesis::protobuf::RobotStatusInfo*>(
      ::com::genesis::protobuf::RobotStatusInfo::internal_default_instance());
}
class CSRobotStatus::HasBitSetters {
 public:
  static const ::com::genesis::protobuf::RobotStatusInfo& info(const CSRobotStatus* msg);
  static void set_has_info(CSRobotStatus* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::genesis::protobuf::RobotStatusInfo&
CSRobotStatus::HasBitSetters::info(const CSRobotStatus* msg) {
  return *msg->info_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSRobotStatus::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSRobotStatus::CSRobotStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.CSRobotStatus)
}
CSRobotStatus::CSRobotStatus(const CSRobotStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::com::genesis::protobuf::RobotStatusInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.CSRobotStatus)
}

void CSRobotStatus::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CSRobotStatus_Robot_2eproto.base);
  info_ = NULL;
}

CSRobotStatus::~CSRobotStatus() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.CSRobotStatus)
  SharedDtor();
}

void CSRobotStatus::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void CSRobotStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSRobotStatus& CSRobotStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CSRobotStatus_Robot_2eproto.base);
  return *internal_default_instance();
}


void CSRobotStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.CSRobotStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(info_ != NULL);
    info_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CSRobotStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CSRobotStatus*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional .com.genesis.protobuf.RobotStatusInfo info = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        parser_till_end = ::com::genesis::protobuf::RobotStatusInfo::_InternalParse;
        object = msg->mutable_info();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CSRobotStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.CSRobotStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.genesis.protobuf.RobotStatusInfo info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.CSRobotStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.CSRobotStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CSRobotStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.CSRobotStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotStatusInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::info(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.CSRobotStatus)
}

::google::protobuf::uint8* CSRobotStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.CSRobotStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotStatusInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::info(this), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.CSRobotStatus)
  return target;
}

size_t CSRobotStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.CSRobotStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.genesis.protobuf.RobotStatusInfo info = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSRobotStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.CSRobotStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CSRobotStatus* source =
      ::google::protobuf::DynamicCastToGenerated<CSRobotStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.CSRobotStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.CSRobotStatus)
    MergeFrom(*source);
  }
}

void CSRobotStatus::MergeFrom(const CSRobotStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.CSRobotStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::com::genesis::protobuf::RobotStatusInfo::MergeFrom(from.info());
  }
}

void CSRobotStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.CSRobotStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSRobotStatus::CopyFrom(const CSRobotStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.CSRobotStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSRobotStatus::IsInitialized() const {
  return true;
}

void CSRobotStatus::Swap(CSRobotStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSRobotStatus::InternalSwap(CSRobotStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(info_, other->info_);
}

::google::protobuf::Metadata CSRobotStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RobotStatusInfo::InitAsDefaultInstance() {
}
class RobotStatusInfo::HasBitSetters {
 public:
  static void set_has_status(RobotStatusInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotStatusInfo::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotStatusInfo::RobotStatusInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.RobotStatusInfo)
}
RobotStatusInfo::RobotStatusInfo(const RobotStatusInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.RobotStatusInfo)
}

void RobotStatusInfo::SharedCtor() {
  status_ = 0;
}

RobotStatusInfo::~RobotStatusInfo() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.RobotStatusInfo)
  SharedDtor();
}

void RobotStatusInfo::SharedDtor() {
}

void RobotStatusInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RobotStatusInfo& RobotStatusInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RobotStatusInfo_Robot_2eproto.base);
  return *internal_default_instance();
}


void RobotStatusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.RobotStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RobotStatusInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RobotStatusInfo*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional .com.genesis.protobuf.RobotStatus status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        if (!::com::genesis::protobuf::RobotStatus_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(1, val, msg->mutable_unknown_fields());
          break;
        }
        ::com::genesis::protobuf::RobotStatus value = static_cast<::com::genesis::protobuf::RobotStatus>(val);
        msg->set_status(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RobotStatusInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.RobotStatusInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.genesis.protobuf.RobotStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::genesis::protobuf::RobotStatus_IsValid(value)) {
            set_status(static_cast< ::com::genesis::protobuf::RobotStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.RobotStatusInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.RobotStatusInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RobotStatusInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.RobotStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotStatus status = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.RobotStatusInfo)
}

::google::protobuf::uint8* RobotStatusInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.RobotStatusInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.genesis.protobuf.RobotStatus status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.RobotStatusInfo)
  return target;
}

size_t RobotStatusInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.RobotStatusInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.genesis.protobuf.RobotStatus status = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotStatusInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.RobotStatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotStatusInfo* source =
      ::google::protobuf::DynamicCastToGenerated<RobotStatusInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.RobotStatusInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.RobotStatusInfo)
    MergeFrom(*source);
  }
}

void RobotStatusInfo::MergeFrom(const RobotStatusInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.RobotStatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    set_status(from.status());
  }
}

void RobotStatusInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.RobotStatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotStatusInfo::CopyFrom(const RobotStatusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.RobotStatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotStatusInfo::IsInitialized() const {
  return true;
}

void RobotStatusInfo::Swap(RobotStatusInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotStatusInfo::InternalSwap(RobotStatusInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(status_, other->status_);
}

::google::protobuf::Metadata RobotStatusInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CSRobotError::InitAsDefaultInstance() {
}
class CSRobotError::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CSRobotError::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CSRobotError::CSRobotError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.CSRobotError)
}
CSRobotError::CSRobotError(const CSRobotError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.CSRobotError)
}

void CSRobotError::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CSRobotError_Robot_2eproto.base);
}

CSRobotError::~CSRobotError() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.CSRobotError)
  SharedDtor();
}

void CSRobotError::SharedDtor() {
}

void CSRobotError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CSRobotError& CSRobotError::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CSRobotError_Robot_2eproto.base);
  return *internal_default_instance();
}


void CSRobotError::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.CSRobotError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CSRobotError::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CSRobotError*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // repeated .com.genesis.protobuf.RobotError errors = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = Varint::Parse32Inline(ptr, &size);
          if (!ptr) goto error;
          parser_till_end = ::com::genesis::protobuf::RobotError::_InternalParse;
          object = msg->add_errors();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
          ptr = newend;
          if (ptr >= end) break;
        } while((*reinterpret_cast<const ::google::protobuf::uint64*>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CSRobotError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.CSRobotError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.genesis.protobuf.RobotError errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.CSRobotError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.CSRobotError)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CSRobotError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.CSRobotError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.genesis.protobuf.RobotError errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->errors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.CSRobotError)
}

::google::protobuf::uint8* CSRobotError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.CSRobotError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.genesis.protobuf.RobotError errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->errors(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.CSRobotError)
  return target;
}

size_t CSRobotError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.CSRobotError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.genesis.protobuf.RobotError errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CSRobotError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.CSRobotError)
  GOOGLE_DCHECK_NE(&from, this);
  const CSRobotError* source =
      ::google::protobuf::DynamicCastToGenerated<CSRobotError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.CSRobotError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.CSRobotError)
    MergeFrom(*source);
  }
}

void CSRobotError::MergeFrom(const CSRobotError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.CSRobotError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
}

void CSRobotError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.CSRobotError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSRobotError::CopyFrom(const CSRobotError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.CSRobotError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSRobotError::IsInitialized() const {
  return true;
}

void CSRobotError::Swap(CSRobotError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSRobotError::InternalSwap(CSRobotError* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
}

::google::protobuf::Metadata CSRobotError::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RobotError::InitAsDefaultInstance() {
}
class RobotError::HasBitSetters {
 public:
  static void set_has_id(RobotError* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_level(RobotError* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_status(RobotError* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_reason(RobotError* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotError::kIdFieldNumber;
const int RobotError::kLevelFieldNumber;
const int RobotError::kStatusFieldNumber;
const int RobotError::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotError::RobotError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genesis.protobuf.RobotError)
}
RobotError::RobotError(const RobotError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:com.genesis.protobuf.RobotError)
}

void RobotError::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RobotError_Robot_2eproto.base);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(status_));
}

RobotError::~RobotError() {
  // @@protoc_insertion_point(destructor:com.genesis.protobuf.RobotError)
  SharedDtor();
}

void RobotError::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RobotError& RobotError::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RobotError_Robot_2eproto.base);
  return *internal_default_instance();
}


void RobotError::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genesis.protobuf.RobotError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reason_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_) -
        reinterpret_cast<char*>(&id_)) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RobotError::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RobotError*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ::google::protobuf::uint32 tag;
    ptr = Varint::Parse32Inline(ptr, &tag);
    if (!ptr) goto error;
    switch (tag >> 3) {
      case 0: goto error;
      // optional int32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_id(value);
        break;
      }
      // optional int32 level = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        ::google::protobuf::int32 value = val;
        msg->set_level(value);
        break;
      }
      // optional .com.genesis.protobuf.RobotStatus status = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        if (!ptr) goto error;
        if (!::com::genesis::protobuf::RobotStatus_IsValid(val)) {
          ::google::protobuf::internal::WriteVarint(3, val, msg->mutable_unknown_fields());
          break;
        }
        ::com::genesis::protobuf::RobotStatus value = static_cast<::com::genesis::protobuf::RobotStatus>(val);
        msg->set_status(value);
        break;
      }
      // optional string reason = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        if (!ptr) goto error;
        ctx->extra_parse_data().SetFieldName("com.genesis.protobuf.RobotError.reason");
        parser_till_end = ::google::protobuf::internal::StringParserUTF8Verify;
        ::std::string* str = msg->mutable_reason();
        str->clear();
        object = str;
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (!ctx->ParseExactRange({parser_till_end, object}, ptr, newend)) goto error;
        ptr = newend;
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4) {
          if (!ctx->ValidEndGroup(tag)) goto error;
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
error:
  return nullptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth);
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RobotError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genesis.protobuf.RobotError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_level(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.genesis.protobuf.RobotStatus status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::genesis::protobuf::RobotStatus_IsValid(value)) {
            set_status(static_cast< ::com::genesis::protobuf::RobotStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast<::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.genesis.protobuf.RobotError.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genesis.protobuf.RobotError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genesis.protobuf.RobotError)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RobotError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genesis.protobuf.RobotError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 level = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // optional .com.genesis.protobuf.RobotStatus status = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional string reason = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.genesis.protobuf.RobotError.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genesis.protobuf.RobotError)
}

::google::protobuf::uint8* RobotError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genesis.protobuf.RobotError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 level = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // optional .com.genesis.protobuf.RobotStatus status = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional string reason = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.genesis.protobuf.RobotError.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genesis.protobuf.RobotError)
  return target;
}

size_t RobotError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genesis.protobuf.RobotError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string reason = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 level = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional .com.genesis.protobuf.RobotStatus status = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RobotError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genesis.protobuf.RobotError)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotError* source =
      ::google::protobuf::DynamicCastToGenerated<RobotError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genesis.protobuf.RobotError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genesis.protobuf.RobotError)
    MergeFrom(*source);
  }
}

void RobotError::MergeFrom(const RobotError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genesis.protobuf.RobotError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000008u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RobotError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genesis.protobuf.RobotError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotError::CopyFrom(const RobotError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genesis.protobuf.RobotError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotError::IsInitialized() const {
  return true;
}

void RobotError::Swap(RobotError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotError::InternalSwap(RobotError* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(level_, other->level_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata RobotError::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_Robot_2eproto);
  return ::file_level_metadata_Robot_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace genesis
}  // namespace com
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::CSRobotPos* Arena::CreateMaybeMessage< ::com::genesis::protobuf::CSRobotPos >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::CSRobotPos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::RobotPos* Arena::CreateMaybeMessage< ::com::genesis::protobuf::RobotPos >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::RobotPos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::CSRobotBattery* Arena::CreateMaybeMessage< ::com::genesis::protobuf::CSRobotBattery >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::CSRobotBattery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::RobotBattery* Arena::CreateMaybeMessage< ::com::genesis::protobuf::RobotBattery >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::RobotBattery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::CSRobotSwitch* Arena::CreateMaybeMessage< ::com::genesis::protobuf::CSRobotSwitch >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::CSRobotSwitch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::RobotSwitch* Arena::CreateMaybeMessage< ::com::genesis::protobuf::RobotSwitch >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::RobotSwitch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::CSRobotStatus* Arena::CreateMaybeMessage< ::com::genesis::protobuf::CSRobotStatus >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::CSRobotStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::RobotStatusInfo* Arena::CreateMaybeMessage< ::com::genesis::protobuf::RobotStatusInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::RobotStatusInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::CSRobotError* Arena::CreateMaybeMessage< ::com::genesis::protobuf::CSRobotError >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::CSRobotError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genesis::protobuf::RobotError* Arena::CreateMaybeMessage< ::com::genesis::protobuf::RobotError >(Arena* arena) {
  return Arena::CreateInternal< ::com::genesis::protobuf::RobotError >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
