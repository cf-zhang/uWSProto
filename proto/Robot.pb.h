// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Robot.proto

#ifndef PROTOBUF_INCLUDED_Robot_2eproto
#define PROTOBUF_INCLUDED_Robot_2eproto

#include <limits>
#include <string>

#include <google/protobuf/stubs/common.h>
#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "client/MessageType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Robot_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Robot_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[10]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Robot_2eproto();
namespace com {
namespace genesis {
namespace protobuf {
class CSRobotBattery;
class CSRobotBatteryDefaultTypeInternal;
extern CSRobotBatteryDefaultTypeInternal _CSRobotBattery_default_instance_;
class CSRobotError;
class CSRobotErrorDefaultTypeInternal;
extern CSRobotErrorDefaultTypeInternal _CSRobotError_default_instance_;
class CSRobotPos;
class CSRobotPosDefaultTypeInternal;
extern CSRobotPosDefaultTypeInternal _CSRobotPos_default_instance_;
class CSRobotStatus;
class CSRobotStatusDefaultTypeInternal;
extern CSRobotStatusDefaultTypeInternal _CSRobotStatus_default_instance_;
class CSRobotSwitch;
class CSRobotSwitchDefaultTypeInternal;
extern CSRobotSwitchDefaultTypeInternal _CSRobotSwitch_default_instance_;
class RobotBattery;
class RobotBatteryDefaultTypeInternal;
extern RobotBatteryDefaultTypeInternal _RobotBattery_default_instance_;
class RobotError;
class RobotErrorDefaultTypeInternal;
extern RobotErrorDefaultTypeInternal _RobotError_default_instance_;
class RobotPos;
class RobotPosDefaultTypeInternal;
extern RobotPosDefaultTypeInternal _RobotPos_default_instance_;
class RobotStatusInfo;
class RobotStatusInfoDefaultTypeInternal;
extern RobotStatusInfoDefaultTypeInternal _RobotStatusInfo_default_instance_;
class RobotSwitch;
class RobotSwitchDefaultTypeInternal;
extern RobotSwitchDefaultTypeInternal _RobotSwitch_default_instance_;
}  // namespace protobuf
}  // namespace genesis
}  // namespace com
namespace google {
namespace protobuf {
template<> ::com::genesis::protobuf::CSRobotBattery* Arena::CreateMaybeMessage<::com::genesis::protobuf::CSRobotBattery>(Arena*);
template<> ::com::genesis::protobuf::CSRobotError* Arena::CreateMaybeMessage<::com::genesis::protobuf::CSRobotError>(Arena*);
template<> ::com::genesis::protobuf::CSRobotPos* Arena::CreateMaybeMessage<::com::genesis::protobuf::CSRobotPos>(Arena*);
template<> ::com::genesis::protobuf::CSRobotStatus* Arena::CreateMaybeMessage<::com::genesis::protobuf::CSRobotStatus>(Arena*);
template<> ::com::genesis::protobuf::CSRobotSwitch* Arena::CreateMaybeMessage<::com::genesis::protobuf::CSRobotSwitch>(Arena*);
template<> ::com::genesis::protobuf::RobotBattery* Arena::CreateMaybeMessage<::com::genesis::protobuf::RobotBattery>(Arena*);
template<> ::com::genesis::protobuf::RobotError* Arena::CreateMaybeMessage<::com::genesis::protobuf::RobotError>(Arena*);
template<> ::com::genesis::protobuf::RobotPos* Arena::CreateMaybeMessage<::com::genesis::protobuf::RobotPos>(Arena*);
template<> ::com::genesis::protobuf::RobotStatusInfo* Arena::CreateMaybeMessage<::com::genesis::protobuf::RobotStatusInfo>(Arena*);
template<> ::com::genesis::protobuf::RobotSwitch* Arena::CreateMaybeMessage<::com::genesis::protobuf::RobotSwitch>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace com {
namespace genesis {
namespace protobuf {

enum RobotStatus {
  StandBy = 0,
  Following = 1,
  Pause = 2,
  Navigating = 3,
  Charging = 4
};
bool RobotStatus_IsValid(int value);
const RobotStatus RobotStatus_MIN = StandBy;
const RobotStatus RobotStatus_MAX = Charging;
const int RobotStatus_ARRAYSIZE = RobotStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RobotStatus_descriptor();
inline const ::std::string& RobotStatus_Name(RobotStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RobotStatus_descriptor(), value);
}
inline bool RobotStatus_Parse(
    const ::std::string& name, RobotStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RobotStatus>(
    RobotStatus_descriptor(), name, value);
}
// ===================================================================

class CSRobotPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.CSRobotPos) */ {
 public:
  CSRobotPos();
  virtual ~CSRobotPos();

  CSRobotPos(const CSRobotPos& from);

  inline CSRobotPos& operator=(const CSRobotPos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSRobotPos(CSRobotPos&& from) noexcept
    : CSRobotPos() {
    *this = ::std::move(from);
  }

  inline CSRobotPos& operator=(CSRobotPos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSRobotPos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSRobotPos* internal_default_instance() {
    return reinterpret_cast<const CSRobotPos*>(
               &_CSRobotPos_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CSRobotPos* other);
  friend void swap(CSRobotPos& a, CSRobotPos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSRobotPos* New() const final {
    return CreateMaybeMessage<CSRobotPos>(NULL);
  }

  CSRobotPos* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSRobotPos>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSRobotPos& from);
  void MergeFrom(const CSRobotPos& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSRobotPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.genesis.protobuf.RobotPos info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::com::genesis::protobuf::RobotPos& info() const;
  ::com::genesis::protobuf::RobotPos* release_info();
  ::com::genesis::protobuf::RobotPos* mutable_info();
  void set_allocated_info(::com::genesis::protobuf::RobotPos* info);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.CSRobotPos)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::genesis::protobuf::RobotPos* info_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class RobotPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.RobotPos) */ {
 public:
  RobotPos();
  virtual ~RobotPos();

  RobotPos(const RobotPos& from);

  inline RobotPos& operator=(const RobotPos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotPos(RobotPos&& from) noexcept
    : RobotPos() {
    *this = ::std::move(from);
  }

  inline RobotPos& operator=(RobotPos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RobotPos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotPos* internal_default_instance() {
    return reinterpret_cast<const RobotPos*>(
               &_RobotPos_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RobotPos* other);
  friend void swap(RobotPos& a, RobotPos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotPos* New() const final {
    return CreateMaybeMessage<RobotPos>(NULL);
  }

  RobotPos* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotPos>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotPos& from);
  void MergeFrom(const RobotPos& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional float posX = 2;
  bool has_posx() const;
  void clear_posx();
  static const int kPosXFieldNumber = 2;
  float posx() const;
  void set_posx(float value);

  // optional float posY = 3;
  bool has_posy() const;
  void clear_posy();
  static const int kPosYFieldNumber = 3;
  float posy() const;
  void set_posy(float value);

  // optional float rotation = 4;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  float rotation() const;
  void set_rotation(float value);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.RobotPos)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  float posx_;
  float posy_;
  float rotation_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class CSRobotBattery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.CSRobotBattery) */ {
 public:
  CSRobotBattery();
  virtual ~CSRobotBattery();

  CSRobotBattery(const CSRobotBattery& from);

  inline CSRobotBattery& operator=(const CSRobotBattery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSRobotBattery(CSRobotBattery&& from) noexcept
    : CSRobotBattery() {
    *this = ::std::move(from);
  }

  inline CSRobotBattery& operator=(CSRobotBattery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSRobotBattery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSRobotBattery* internal_default_instance() {
    return reinterpret_cast<const CSRobotBattery*>(
               &_CSRobotBattery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CSRobotBattery* other);
  friend void swap(CSRobotBattery& a, CSRobotBattery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSRobotBattery* New() const final {
    return CreateMaybeMessage<CSRobotBattery>(NULL);
  }

  CSRobotBattery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSRobotBattery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSRobotBattery& from);
  void MergeFrom(const CSRobotBattery& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSRobotBattery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.genesis.protobuf.RobotBattery info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::com::genesis::protobuf::RobotBattery& info() const;
  ::com::genesis::protobuf::RobotBattery* release_info();
  ::com::genesis::protobuf::RobotBattery* mutable_info();
  void set_allocated_info(::com::genesis::protobuf::RobotBattery* info);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.CSRobotBattery)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::genesis::protobuf::RobotBattery* info_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class RobotBattery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.RobotBattery) */ {
 public:
  RobotBattery();
  virtual ~RobotBattery();

  RobotBattery(const RobotBattery& from);

  inline RobotBattery& operator=(const RobotBattery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotBattery(RobotBattery&& from) noexcept
    : RobotBattery() {
    *this = ::std::move(from);
  }

  inline RobotBattery& operator=(RobotBattery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RobotBattery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotBattery* internal_default_instance() {
    return reinterpret_cast<const RobotBattery*>(
               &_RobotBattery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RobotBattery* other);
  friend void swap(RobotBattery& a, RobotBattery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotBattery* New() const final {
    return CreateMaybeMessage<RobotBattery>(NULL);
  }

  RobotBattery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotBattery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotBattery& from);
  void MergeFrom(const RobotBattery& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotBattery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float remainingPower = 1;
  bool has_remainingpower() const;
  void clear_remainingpower();
  static const int kRemainingPowerFieldNumber = 1;
  float remainingpower() const;
  void set_remainingpower(float value);

  // optional float remainingPercent = 2;
  bool has_remainingpercent() const;
  void clear_remainingpercent();
  static const int kRemainingPercentFieldNumber = 2;
  float remainingpercent() const;
  void set_remainingpercent(float value);

  // optional float voltage = 3;
  bool has_voltage() const;
  void clear_voltage();
  static const int kVoltageFieldNumber = 3;
  float voltage() const;
  void set_voltage(float value);

  // optional float current = 4;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 4;
  float current() const;
  void set_current(float value);

  // optional bool isCharging = 5;
  bool has_ischarging() const;
  void clear_ischarging();
  static const int kIsChargingFieldNumber = 5;
  bool ischarging() const;
  void set_ischarging(bool value);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.RobotBattery)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float remainingpower_;
  float remainingpercent_;
  float voltage_;
  float current_;
  bool ischarging_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class CSRobotSwitch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.CSRobotSwitch) */ {
 public:
  CSRobotSwitch();
  virtual ~CSRobotSwitch();

  CSRobotSwitch(const CSRobotSwitch& from);

  inline CSRobotSwitch& operator=(const CSRobotSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSRobotSwitch(CSRobotSwitch&& from) noexcept
    : CSRobotSwitch() {
    *this = ::std::move(from);
  }

  inline CSRobotSwitch& operator=(CSRobotSwitch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSRobotSwitch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSRobotSwitch* internal_default_instance() {
    return reinterpret_cast<const CSRobotSwitch*>(
               &_CSRobotSwitch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CSRobotSwitch* other);
  friend void swap(CSRobotSwitch& a, CSRobotSwitch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSRobotSwitch* New() const final {
    return CreateMaybeMessage<CSRobotSwitch>(NULL);
  }

  CSRobotSwitch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSRobotSwitch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSRobotSwitch& from);
  void MergeFrom(const CSRobotSwitch& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSRobotSwitch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.genesis.protobuf.RobotSwitch info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::com::genesis::protobuf::RobotSwitch& info() const;
  ::com::genesis::protobuf::RobotSwitch* release_info();
  ::com::genesis::protobuf::RobotSwitch* mutable_info();
  void set_allocated_info(::com::genesis::protobuf::RobotSwitch* info);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.CSRobotSwitch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::genesis::protobuf::RobotSwitch* info_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class RobotSwitch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.RobotSwitch) */ {
 public:
  RobotSwitch();
  virtual ~RobotSwitch();

  RobotSwitch(const RobotSwitch& from);

  inline RobotSwitch& operator=(const RobotSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotSwitch(RobotSwitch&& from) noexcept
    : RobotSwitch() {
    *this = ::std::move(from);
  }

  inline RobotSwitch& operator=(RobotSwitch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RobotSwitch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotSwitch* internal_default_instance() {
    return reinterpret_cast<const RobotSwitch*>(
               &_RobotSwitch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RobotSwitch* other);
  friend void swap(RobotSwitch& a, RobotSwitch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotSwitch* New() const final {
    return CreateMaybeMessage<RobotSwitch>(NULL);
  }

  RobotSwitch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotSwitch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotSwitch& from);
  void MergeFrom(const RobotSwitch& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotSwitch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 assistance = 1;
  bool has_assistance() const;
  void clear_assistance();
  static const int kAssistanceFieldNumber = 1;
  ::google::protobuf::int32 assistance() const;
  void set_assistance(::google::protobuf::int32 value);

  // optional bool urgent = 2;
  bool has_urgent() const;
  void clear_urgent();
  static const int kUrgentFieldNumber = 2;
  bool urgent() const;
  void set_urgent(bool value);

  // optional bool power = 3;
  bool has_power() const;
  void clear_power();
  static const int kPowerFieldNumber = 3;
  bool power() const;
  void set_power(bool value);

  // optional int32 collision = 4;
  bool has_collision() const;
  void clear_collision();
  static const int kCollisionFieldNumber = 4;
  ::google::protobuf::int32 collision() const;
  void set_collision(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.RobotSwitch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 assistance_;
  bool urgent_;
  bool power_;
  ::google::protobuf::int32 collision_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class CSRobotStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.CSRobotStatus) */ {
 public:
  CSRobotStatus();
  virtual ~CSRobotStatus();

  CSRobotStatus(const CSRobotStatus& from);

  inline CSRobotStatus& operator=(const CSRobotStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSRobotStatus(CSRobotStatus&& from) noexcept
    : CSRobotStatus() {
    *this = ::std::move(from);
  }

  inline CSRobotStatus& operator=(CSRobotStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSRobotStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSRobotStatus* internal_default_instance() {
    return reinterpret_cast<const CSRobotStatus*>(
               &_CSRobotStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(CSRobotStatus* other);
  friend void swap(CSRobotStatus& a, CSRobotStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSRobotStatus* New() const final {
    return CreateMaybeMessage<CSRobotStatus>(NULL);
  }

  CSRobotStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSRobotStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSRobotStatus& from);
  void MergeFrom(const CSRobotStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSRobotStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.genesis.protobuf.RobotStatusInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::com::genesis::protobuf::RobotStatusInfo& info() const;
  ::com::genesis::protobuf::RobotStatusInfo* release_info();
  ::com::genesis::protobuf::RobotStatusInfo* mutable_info();
  void set_allocated_info(::com::genesis::protobuf::RobotStatusInfo* info);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.CSRobotStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::com::genesis::protobuf::RobotStatusInfo* info_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class RobotStatusInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.RobotStatusInfo) */ {
 public:
  RobotStatusInfo();
  virtual ~RobotStatusInfo();

  RobotStatusInfo(const RobotStatusInfo& from);

  inline RobotStatusInfo& operator=(const RobotStatusInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotStatusInfo(RobotStatusInfo&& from) noexcept
    : RobotStatusInfo() {
    *this = ::std::move(from);
  }

  inline RobotStatusInfo& operator=(RobotStatusInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RobotStatusInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotStatusInfo* internal_default_instance() {
    return reinterpret_cast<const RobotStatusInfo*>(
               &_RobotStatusInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(RobotStatusInfo* other);
  friend void swap(RobotStatusInfo& a, RobotStatusInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotStatusInfo* New() const final {
    return CreateMaybeMessage<RobotStatusInfo>(NULL);
  }

  RobotStatusInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotStatusInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotStatusInfo& from);
  void MergeFrom(const RobotStatusInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotStatusInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .com.genesis.protobuf.RobotStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::com::genesis::protobuf::RobotStatus status() const;
  void set_status(::com::genesis::protobuf::RobotStatus value);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.RobotStatusInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int status_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class CSRobotError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.CSRobotError) */ {
 public:
  CSRobotError();
  virtual ~CSRobotError();

  CSRobotError(const CSRobotError& from);

  inline CSRobotError& operator=(const CSRobotError& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSRobotError(CSRobotError&& from) noexcept
    : CSRobotError() {
    *this = ::std::move(from);
  }

  inline CSRobotError& operator=(CSRobotError&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CSRobotError& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSRobotError* internal_default_instance() {
    return reinterpret_cast<const CSRobotError*>(
               &_CSRobotError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CSRobotError* other);
  friend void swap(CSRobotError& a, CSRobotError& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSRobotError* New() const final {
    return CreateMaybeMessage<CSRobotError>(NULL);
  }

  CSRobotError* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CSRobotError>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CSRobotError& from);
  void MergeFrom(const CSRobotError& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CSRobotError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .com.genesis.protobuf.RobotError errors = 1;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 1;
  ::com::genesis::protobuf::RobotError* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::com::genesis::protobuf::RobotError >*
      mutable_errors();
  const ::com::genesis::protobuf::RobotError& errors(int index) const;
  ::com::genesis::protobuf::RobotError* add_errors();
  const ::google::protobuf::RepeatedPtrField< ::com::genesis::protobuf::RobotError >&
      errors() const;

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.CSRobotError)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::genesis::protobuf::RobotError > errors_;
  friend struct ::TableStruct_Robot_2eproto;
};
// -------------------------------------------------------------------

class RobotError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.genesis.protobuf.RobotError) */ {
 public:
  RobotError();
  virtual ~RobotError();

  RobotError(const RobotError& from);

  inline RobotError& operator=(const RobotError& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RobotError(RobotError&& from) noexcept
    : RobotError() {
    *this = ::std::move(from);
  }

  inline RobotError& operator=(RobotError&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RobotError& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotError* internal_default_instance() {
    return reinterpret_cast<const RobotError*>(
               &_RobotError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(RobotError* other);
  friend void swap(RobotError& a, RobotError& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotError* New() const final {
    return CreateMaybeMessage<RobotError>(NULL);
  }

  RobotError* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RobotError>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RobotError& from);
  void MergeFrom(const RobotError& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string reason = 4;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 4;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 level = 2;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional .com.genesis.protobuf.RobotStatus status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::com::genesis::protobuf::RobotStatus status() const;
  void set_status(::com::genesis::protobuf::RobotStatus value);

  // @@protoc_insertion_point(class_scope:com.genesis.protobuf.RobotError)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  int status_;
  friend struct ::TableStruct_Robot_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CSRobotPos

// optional .com.genesis.protobuf.RobotPos info = 1;
inline bool CSRobotPos::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRobotPos::clear_info() {
  if (info_ != NULL) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::genesis::protobuf::RobotPos& CSRobotPos::info() const {
  const ::com::genesis::protobuf::RobotPos* p = info_;
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.CSRobotPos.info)
  return p != NULL ? *p : *reinterpret_cast<const ::com::genesis::protobuf::RobotPos*>(
      &::com::genesis::protobuf::_RobotPos_default_instance_);
}
inline ::com::genesis::protobuf::RobotPos* CSRobotPos::release_info() {
  // @@protoc_insertion_point(field_release:com.genesis.protobuf.CSRobotPos.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::genesis::protobuf::RobotPos* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::com::genesis::protobuf::RobotPos* CSRobotPos::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == NULL) {
    auto* p = CreateMaybeMessage<::com::genesis::protobuf::RobotPos>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.genesis.protobuf.CSRobotPos.info)
  return info_;
}
inline void CSRobotPos::set_allocated_info(::com::genesis::protobuf::RobotPos* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.genesis.protobuf.CSRobotPos.info)
}

// -------------------------------------------------------------------

// RobotPos

// optional string id = 1;
inline bool RobotPos::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotPos::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RobotPos::id() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotPos.id)
  return id_.GetNoArena();
}
inline void RobotPos::set_id(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotPos.id)
}
#if LANG_CXX11
inline void RobotPos::set_id(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.genesis.protobuf.RobotPos.id)
}
#endif
inline void RobotPos::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.genesis.protobuf.RobotPos.id)
}
inline void RobotPos::set_id(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.genesis.protobuf.RobotPos.id)
}
inline ::std::string* RobotPos::mutable_id() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.genesis.protobuf.RobotPos.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotPos::release_id() {
  // @@protoc_insertion_point(field_release:com.genesis.protobuf.RobotPos.id)
  if (!has_id()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotPos::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.genesis.protobuf.RobotPos.id)
}

// optional float posX = 2;
inline bool RobotPos::has_posx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotPos::clear_posx() {
  posx_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float RobotPos::posx() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotPos.posX)
  return posx_;
}
inline void RobotPos::set_posx(float value) {
  _has_bits_[0] |= 0x00000002u;
  posx_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotPos.posX)
}

// optional float posY = 3;
inline bool RobotPos::has_posy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotPos::clear_posy() {
  posy_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float RobotPos::posy() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotPos.posY)
  return posy_;
}
inline void RobotPos::set_posy(float value) {
  _has_bits_[0] |= 0x00000004u;
  posy_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotPos.posY)
}

// optional float rotation = 4;
inline bool RobotPos::has_rotation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotPos::clear_rotation() {
  rotation_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float RobotPos::rotation() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotPos.rotation)
  return rotation_;
}
inline void RobotPos::set_rotation(float value) {
  _has_bits_[0] |= 0x00000008u;
  rotation_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotPos.rotation)
}

// -------------------------------------------------------------------

// CSRobotBattery

// optional .com.genesis.protobuf.RobotBattery info = 1;
inline bool CSRobotBattery::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRobotBattery::clear_info() {
  if (info_ != NULL) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::genesis::protobuf::RobotBattery& CSRobotBattery::info() const {
  const ::com::genesis::protobuf::RobotBattery* p = info_;
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.CSRobotBattery.info)
  return p != NULL ? *p : *reinterpret_cast<const ::com::genesis::protobuf::RobotBattery*>(
      &::com::genesis::protobuf::_RobotBattery_default_instance_);
}
inline ::com::genesis::protobuf::RobotBattery* CSRobotBattery::release_info() {
  // @@protoc_insertion_point(field_release:com.genesis.protobuf.CSRobotBattery.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::genesis::protobuf::RobotBattery* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::com::genesis::protobuf::RobotBattery* CSRobotBattery::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == NULL) {
    auto* p = CreateMaybeMessage<::com::genesis::protobuf::RobotBattery>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.genesis.protobuf.CSRobotBattery.info)
  return info_;
}
inline void CSRobotBattery::set_allocated_info(::com::genesis::protobuf::RobotBattery* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.genesis.protobuf.CSRobotBattery.info)
}

// -------------------------------------------------------------------

// RobotBattery

// optional float remainingPower = 1;
inline bool RobotBattery::has_remainingpower() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotBattery::clear_remainingpower() {
  remainingpower_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float RobotBattery::remainingpower() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotBattery.remainingPower)
  return remainingpower_;
}
inline void RobotBattery::set_remainingpower(float value) {
  _has_bits_[0] |= 0x00000001u;
  remainingpower_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotBattery.remainingPower)
}

// optional float remainingPercent = 2;
inline bool RobotBattery::has_remainingpercent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotBattery::clear_remainingpercent() {
  remainingpercent_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float RobotBattery::remainingpercent() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotBattery.remainingPercent)
  return remainingpercent_;
}
inline void RobotBattery::set_remainingpercent(float value) {
  _has_bits_[0] |= 0x00000002u;
  remainingpercent_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotBattery.remainingPercent)
}

// optional float voltage = 3;
inline bool RobotBattery::has_voltage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotBattery::clear_voltage() {
  voltage_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float RobotBattery::voltage() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotBattery.voltage)
  return voltage_;
}
inline void RobotBattery::set_voltage(float value) {
  _has_bits_[0] |= 0x00000004u;
  voltage_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotBattery.voltage)
}

// optional float current = 4;
inline bool RobotBattery::has_current() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotBattery::clear_current() {
  current_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float RobotBattery::current() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotBattery.current)
  return current_;
}
inline void RobotBattery::set_current(float value) {
  _has_bits_[0] |= 0x00000008u;
  current_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotBattery.current)
}

// optional bool isCharging = 5;
inline bool RobotBattery::has_ischarging() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RobotBattery::clear_ischarging() {
  ischarging_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool RobotBattery::ischarging() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotBattery.isCharging)
  return ischarging_;
}
inline void RobotBattery::set_ischarging(bool value) {
  _has_bits_[0] |= 0x00000010u;
  ischarging_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotBattery.isCharging)
}

// -------------------------------------------------------------------

// CSRobotSwitch

// optional .com.genesis.protobuf.RobotSwitch info = 1;
inline bool CSRobotSwitch::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRobotSwitch::clear_info() {
  if (info_ != NULL) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::genesis::protobuf::RobotSwitch& CSRobotSwitch::info() const {
  const ::com::genesis::protobuf::RobotSwitch* p = info_;
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.CSRobotSwitch.info)
  return p != NULL ? *p : *reinterpret_cast<const ::com::genesis::protobuf::RobotSwitch*>(
      &::com::genesis::protobuf::_RobotSwitch_default_instance_);
}
inline ::com::genesis::protobuf::RobotSwitch* CSRobotSwitch::release_info() {
  // @@protoc_insertion_point(field_release:com.genesis.protobuf.CSRobotSwitch.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::genesis::protobuf::RobotSwitch* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::com::genesis::protobuf::RobotSwitch* CSRobotSwitch::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == NULL) {
    auto* p = CreateMaybeMessage<::com::genesis::protobuf::RobotSwitch>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.genesis.protobuf.CSRobotSwitch.info)
  return info_;
}
inline void CSRobotSwitch::set_allocated_info(::com::genesis::protobuf::RobotSwitch* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.genesis.protobuf.CSRobotSwitch.info)
}

// -------------------------------------------------------------------

// RobotSwitch

// optional int32 assistance = 1;
inline bool RobotSwitch::has_assistance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotSwitch::clear_assistance() {
  assistance_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 RobotSwitch::assistance() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotSwitch.assistance)
  return assistance_;
}
inline void RobotSwitch::set_assistance(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  assistance_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotSwitch.assistance)
}

// optional bool urgent = 2;
inline bool RobotSwitch::has_urgent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotSwitch::clear_urgent() {
  urgent_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool RobotSwitch::urgent() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotSwitch.urgent)
  return urgent_;
}
inline void RobotSwitch::set_urgent(bool value) {
  _has_bits_[0] |= 0x00000002u;
  urgent_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotSwitch.urgent)
}

// optional bool power = 3;
inline bool RobotSwitch::has_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotSwitch::clear_power() {
  power_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool RobotSwitch::power() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotSwitch.power)
  return power_;
}
inline void RobotSwitch::set_power(bool value) {
  _has_bits_[0] |= 0x00000004u;
  power_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotSwitch.power)
}

// optional int32 collision = 4;
inline bool RobotSwitch::has_collision() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotSwitch::clear_collision() {
  collision_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 RobotSwitch::collision() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotSwitch.collision)
  return collision_;
}
inline void RobotSwitch::set_collision(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  collision_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotSwitch.collision)
}

// -------------------------------------------------------------------

// CSRobotStatus

// optional .com.genesis.protobuf.RobotStatusInfo info = 1;
inline bool CSRobotStatus::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRobotStatus::clear_info() {
  if (info_ != NULL) info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::com::genesis::protobuf::RobotStatusInfo& CSRobotStatus::info() const {
  const ::com::genesis::protobuf::RobotStatusInfo* p = info_;
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.CSRobotStatus.info)
  return p != NULL ? *p : *reinterpret_cast<const ::com::genesis::protobuf::RobotStatusInfo*>(
      &::com::genesis::protobuf::_RobotStatusInfo_default_instance_);
}
inline ::com::genesis::protobuf::RobotStatusInfo* CSRobotStatus::release_info() {
  // @@protoc_insertion_point(field_release:com.genesis.protobuf.CSRobotStatus.info)
  _has_bits_[0] &= ~0x00000001u;
  ::com::genesis::protobuf::RobotStatusInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::com::genesis::protobuf::RobotStatusInfo* CSRobotStatus::mutable_info() {
  _has_bits_[0] |= 0x00000001u;
  if (info_ == NULL) {
    auto* p = CreateMaybeMessage<::com::genesis::protobuf::RobotStatusInfo>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:com.genesis.protobuf.CSRobotStatus.info)
  return info_;
}
inline void CSRobotStatus::set_allocated_info(::com::genesis::protobuf::RobotStatusInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:com.genesis.protobuf.CSRobotStatus.info)
}

// -------------------------------------------------------------------

// RobotStatusInfo

// optional .com.genesis.protobuf.RobotStatus status = 1;
inline bool RobotStatusInfo::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotStatusInfo::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::com::genesis::protobuf::RobotStatus RobotStatusInfo::status() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotStatusInfo.status)
  return static_cast< ::com::genesis::protobuf::RobotStatus >(status_);
}
inline void RobotStatusInfo::set_status(::com::genesis::protobuf::RobotStatus value) {
  assert(::com::genesis::protobuf::RobotStatus_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  status_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotStatusInfo.status)
}

// -------------------------------------------------------------------

// CSRobotError

// repeated .com.genesis.protobuf.RobotError errors = 1;
inline int CSRobotError::errors_size() const {
  return errors_.size();
}
inline void CSRobotError::clear_errors() {
  errors_.Clear();
}
inline ::com::genesis::protobuf::RobotError* CSRobotError::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:com.genesis.protobuf.CSRobotError.errors)
  return errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::com::genesis::protobuf::RobotError >*
CSRobotError::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:com.genesis.protobuf.CSRobotError.errors)
  return &errors_;
}
inline const ::com::genesis::protobuf::RobotError& CSRobotError::errors(int index) const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.CSRobotError.errors)
  return errors_.Get(index);
}
inline ::com::genesis::protobuf::RobotError* CSRobotError::add_errors() {
  // @@protoc_insertion_point(field_add:com.genesis.protobuf.CSRobotError.errors)
  return errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::genesis::protobuf::RobotError >&
CSRobotError::errors() const {
  // @@protoc_insertion_point(field_list:com.genesis.protobuf.CSRobotError.errors)
  return errors_;
}

// -------------------------------------------------------------------

// RobotError

// optional int32 id = 1;
inline bool RobotError::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotError::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 RobotError::id() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotError.id)
  return id_;
}
inline void RobotError::set_id(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotError.id)
}

// optional int32 level = 2;
inline bool RobotError::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RobotError::clear_level() {
  level_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 RobotError::level() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotError.level)
  return level_;
}
inline void RobotError::set_level(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  level_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotError.level)
}

// optional .com.genesis.protobuf.RobotStatus status = 3;
inline bool RobotError::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RobotError::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::com::genesis::protobuf::RobotStatus RobotError::status() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotError.status)
  return static_cast< ::com::genesis::protobuf::RobotStatus >(status_);
}
inline void RobotError::set_status(::com::genesis::protobuf::RobotStatus value) {
  assert(::com::genesis::protobuf::RobotStatus_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  status_ = value;
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotError.status)
}

// optional string reason = 4;
inline bool RobotError::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotError::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RobotError::reason() const {
  // @@protoc_insertion_point(field_get:com.genesis.protobuf.RobotError.reason)
  return reason_.GetNoArena();
}
inline void RobotError::set_reason(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.genesis.protobuf.RobotError.reason)
}
#if LANG_CXX11
inline void RobotError::set_reason(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.genesis.protobuf.RobotError.reason)
}
#endif
inline void RobotError::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _has_bits_[0] |= 0x00000001u;
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.genesis.protobuf.RobotError.reason)
}
inline void RobotError::set_reason(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.genesis.protobuf.RobotError.reason)
}
inline ::std::string* RobotError::mutable_reason() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:com.genesis.protobuf.RobotError.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotError::release_reason() {
  // @@protoc_insertion_point(field_release:com.genesis.protobuf.RobotError.reason)
  if (!has_reason()) {
    return NULL;
  }
  _has_bits_[0] &= ~0x00000001u;
  return reason_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotError::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:com.genesis.protobuf.RobotError.reason)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace genesis
}  // namespace com

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::genesis::protobuf::RobotStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::genesis::protobuf::RobotStatus>() {
  return ::com::genesis::protobuf::RobotStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Robot_2eproto
